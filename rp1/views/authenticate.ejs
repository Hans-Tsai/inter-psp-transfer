<!DOCTYPE html>
<html>
    <head>
        <title>PSP 1</title>
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-wEmeIV1mKuiNpC+IOBjI7aAzPcEZeedi5yW5f2yOq55WWLwNGmvvx4Um1vskeMj0"
            crossorigin="anonymous"
        />
        <style>
            ins {
                font-weight: bold;
            }
            label {
                font-weight: bold;
            }
        </style>
    </head>
    <body>
        <h1>PSP 1 (FIDO)</h1>
        <label for="username">使用者名稱</label>
        <input type="text" name="username" id="username" autocomplete="username webauthn" />
        <div class="username err"></div>

        <!-- 進階設定 -->
        <button
            class="btn btn-primary"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#collapseExample"
            aria-expanded="false"
            aria-controls="collapseExample"
        >
            進階設定
        </button>
        <div class="collapse" id="collapseExample">
            <div class="card card-body">
                <ins>Authentication Settings</ins>
                <!-- User Verification -->
                <label for="optAuthUserVerification"> User Verification </label>
                <select name="optAuthUserVerification" id="optAuthUserVerification">
                    <option value="discouraged">Discouraged</option>
                    <option value="preferred" selected>Preferred</option>
                    <option value="required">Required</option>
                </select>
                <button class="btn btn-warning" onclick="location.reload();">重新設定</button>
            </div>
        </div>

        <div>
            <button type="button" onclick="authenticate()">FIDO 登入</button>
            <button
                type="button"
                data-bs-toggle="tooltip"
                data-bs-placement="bottom"
                title="尚未有帳號嗎？ 點擊註冊"
                onclick="location.href='/psp1/register'"
            >
                FIDO 註冊
            </button>
        </div>
    </body>
    <!-- 引入 Bootstrap JS -->
    <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-p34f1UUtsS3wqzfto5wAAmdvj+osOnFyQFpp4Ua3gs/ZVWx6oOypYoCJhGGScy+8"
        crossorigin="anonymous"
    ></script>
    <script src="https://unpkg.com/@simplewebauthn/browser/dist/bundle/index.umd.min.js"></script>
    <script>
        async function authenticate() {
            try {
                let username = document.getElementById("username").value;
                let authUserVerification = document.getElementById("optAuthUserVerification").value;

                const { startAuthentication } = SimpleWebAuthnBrowser;
                // GET authentication options from the endpoint that calls
                // @simplewebauthn/server -> generateAuthenticationOptions()
                const resp = await fetch("/psp1/authenticate/options", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                        username,
                        userVerification: authUserVerification,
                    }),
                });
                // Pass the options to the authenticator and wait for a response
                const asseRespJSON = await resp.json();
                console.log('AUTHENTICATION OPTIONS');
                console.log(JSON.stringify(asseRespJSON, null, 2));

                const asseResp = await startAuthentication(asseRespJSON);
                console.log('AUTHENTICATION RESPONSE');
                console.log(JSON.stringify(asseResp, null, 2));

                // POST the response to the endpoint that calls
                // @simplewebauthn/server -> verifyAuthenticationResponse()
                const verificationResp = await fetch("/psp1/authenticate/result", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        asseResp,
                        username,
                    }),
                });
                // Wait for the results of verification
                const verificationJSON = await verificationResp.json();
                if (verificationJSON && verificationJSON.verified) {
                    window.alert("Authentication successful!");
                    location.assign("/psp1");
                } else {
                    window.alert("Authentication failed!");
                    location.reload();
                }
            } catch (error) {
                console.log(error.message);
                window.alert(error.message);
            }
        }
    </script>
</html>
